user www-data;
worker_processes auto;
pid /run/nginx.pid;
worker_rlimit_nofile    65535;

include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections  8192;
    use                epoll;
    multi_accept       on;
}

http {

    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    # Timeouts - More conservative values
    client_header_timeout 60s;
    client_body_timeout 60s;
    client_max_body_size 10M;   # Adjust based on your needs
    keepalive_timeout 65;
    send_timeout 60;

    # Buffer Sizes - More conservative values
    client_header_buffer_size 2k;
    client_body_buffer_size 256k;
    large_client_header_buffers 4 4k;

    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;          # Balance between CPU and compression
    gzip_min_length 256;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # SSL Settings
    ssl_protocols TLSv1.2 TLSv1.3;              # More secure defaults
    ssl_prefer_server_ciphers off;              # Modern recommendation
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log error;   # Less verbose logging

    # File Cache Settings
    open_file_cache max=2000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors off;

        ##
        # Basic Settings
        ##

        types_hash_max_size 2048;
        reset_timedout_connection       on;
        server_tokens                   off;
        server_name_in_redirect         off;
        server_names_hash_max_size      512;
        server_names_hash_bucket_size   512;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;


        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;
        include /etc/nginx/conf.d/cao/*.conf;
}